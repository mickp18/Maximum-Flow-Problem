M36 acquired while holding mutex M32 in thread T3: riga 425: unique_lock<mutex> lock(this->mx_node);
M32 previously acquired by the same thread here: riga 398: this->nodes[u]->lockSharedMutex();
M32 acquired here while holding mutex M36 in thread T3: riga 435:  if (!first_time) { this->nodes[u]->lockSharedMutex();}
M36 previously acquired by the same thread here: riga 426: cv_nodes.wait

398 -> T3 M32                      this->nodes[u]->lockSharedMutex();
425 -> T3 M36 (have also M32)      unique_lock<mutex> lock(this->mx_node);
426 -> T3 M36                      cv_nodes.wait
435 -> T3 M32 (have also M36)      if (!first_time) { this->nodes[u]->lockSharedMutex();}

-------------------------------------------------


420 -> M34 (M32 already taken)
432 -> M32 (M34 already taken)


  Mutex M36 acquired here while holding mutex M37 in thread T5: 395 this->nodes[v]->lockSharedMutex();
    Mutex M37 acquired here while holding mutex M36 in thread T6:



Number of nodes: 3
Graph read with nodes: 
0 1 2 
starting
4543185: (enter) I am tid: 140239578326592 with edge: (0, 1) 
5910668: Thread (0, 1) trying to lock mx of u=0
6396411: Thread (0, 1) locked mx of u=0
7046224: Thread (0, 1) trying to lock mx of v=1
7596626: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
8098443: Thread (0, 1) setting label of node 1
8330026: cv_nodes: Thread (0, 1) UNlocked mx of u=0
8514564: cv_nodes: Thread (0, 1) UNlocked mx of v=1
8752820: thread (0, 1) starts spawning
14462036: num threads to join in solve: 2
15239826: thread (0, 1) generated thread (1, 2)
15295172: (enter) I am tid: 140239561541184 with edge: (1, 2) 
16233704: Thread (1, 2) trying to lock mx of u=1
16371276: Thread (1, 2) locked mx of u=1
16557766: Thread (1, 2) trying to lock mx of v=2
16756149: Thread (1, 2) locked mx of v=2
FORWARD EDGE (1, 2)
17147841: Thread (1, 2) setting label of node 2
15288536: (enter) I am tid: 140239569933888 with edge: (0, 2) 
17337494: cv_nodes: Thread (1, 2) UNlocked mx of u=1
17865005: (1) thread (0, 2) will block on cv, nb: 0 ng: 3
18145165: cv_nodes: Thread (1, 2) UNlocked mx of v=2
15820182: thread (0, 1) finished spawning; nb: 0 ng: 3
18503485: (1) thread (0, 2) checks cv
18974544: I am the augmenter thread (1, 2)
19236987: (2) thread (0, 1) will block on cv, nb: 0 ng: 3
19477823: -> (bef) nb: 0, ng: 3
19622402: *. Augmenter edge: (1, 2) is waiting on cv augment
19924646: -> thread (0, 2) stops, sem: 0
20333117: -> (aft) nb: 1, ng: 3
20912906: (2) thread (0, 1) checks cv
21062846: -> (bef) nb: 1, ng: 3
21208367: -> thread (0, 1) stops, sem: 0
21365934: -> (aft) nb: 2, ng: 3
21689786: thread (1, 2), nb: 2 ng: 3
21873273: *. Augmenter - edge: (1, 2) gets out of cv augment
22008355: augmented flow: 1
22198790: reset labels
22402173: Thread (1, 2) trying to lock mx of u=1
22406684: (1) thread (0, 2) checks cv
22544675: Thread (1, 2) locked mx of u=1
22841457: Thread (1, 2) trying to lock mx of v=2
22894105: Thread (1, 2) locked mx of v=2
22693270: -> (bef) nb: 0, ng: 3
23051801: -> thread: (0, 2) restarts, sem: 1
23198733: -> (aft) nb: 0, ng: 3
23287481: (1)  edge: (0, 2) gets out of cv
23477824: Thread (0, 2) trying to lock mx of u=0
23518297: (2) thread (0, 1) checks cv
23565657: Thread (0, 2) locked mx of u=0
23680024: Thread (0, 2) trying to lock mx of v=2
23806140: Thread (0, 2) locked mx of v=2
23587439: -> (bef) nb: 0, ng: 3
FORWARD EDGE (0, 2)
23969370: -> thread: (0, 1) restarts, sem: 1
24133205: Thread (0, 2) setting label of node 2
24311846: -> (aft) nb: 0, ng: 3
24535416: cv_nodes: Thread (0, 2) UNlocked mx of u=0
24554137: (2) thread (0, 1) gets out of cv
24688497: cv_nodes: Thread (0, 2) UNlocked mx of v=2
24990654: I am the augmenter thread (0, 2)
25040418: *. Augmenter edge: (0, 2) is waiting on cv augment
24833918: (1) thread (0, 1) will block on cv, nb: 0 ng: 3
25074286: thread (0, 2), nb: 0 ng: 3
25298135: (1) thread (0, 1) checks cv
25390883: -> (bef) nb: 0, ng: 3
25556868: -> thread (0, 1) stops, sem: 0
25820110: -> (aft) nb: 1, ng: 3
26199159: thread (0, 2), nb: 1 ng: 3
26296360: *. Augmenter - edge: (0, 2) gets out of cv augment
26410989: augmented flow: 2
26517727: done (augmenter), T(0, 2)
26844744: reset labels
BACKWARD EDGE (1, 2)
27504107: Thread (1, 2) has edge flow <= 0: 1
27807790: cv_nodes: Thread (1, 2) UNlocked mx of u=1
27249083: (return) end of thread (0, 2)
27809362: (1) thread (0, 1) checks cv
28977373: -> (bef) nb: 0, ng: 2
29073000: -> thread: (0, 1) restarts, sem: 1
29147063: -> (aft) nb: 0, ng: 2
29218536: (1)  edge: (0, 1) gets out of cv
27990927: cv_nodes: Thread (1, 2) UNlocked mx of v=2
29623888: (2) thread (1, 2) will block on cv, nb: 0 ng: 2
29815230: (2) thread (1, 2) checks cv
29939163: -> (bef) nb: 0, ng: 2
30038425: -> thread (1, 2) stops, sem: 0
29320975: (*) thread (0, 1) exits
30232738: -> (aft) nb: 1, ng: 2
30795003: i'm a thread (0, 1) and joining thread: 140239561541184






Number of nodes: 4
Graph read with nodes: 
0 1 2 3 
starting
1050532: (enter) I am tid: 140215453738560 with edge: (0, 1) 
1212784: Thread (0, 1) trying to lock mx of u=0
1264051: Thread (0, 1) locked mx of u=0
1486727: Thread (0, 1) trying to lock mx of v=1
1577386: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
1844559: Thread (0, 1) setting label of node 1
1938174: cv_nodes: Thread (0, 1) UNlocked mx of u=0
2039069: cv_nodes: Thread (0, 1) UNlocked mx of v=1
2002935: num threads to join in solve: 2
2121973: (enter) I am tid: 140215445345856 with edge: (0, 2) 
2242893: thread (0, 1) starts spawning
2527098: Thread (0, 2) trying to lock mx of u=0
2904289: Thread (0, 2) locked mx of u=0
3076258: Thread (0, 2) trying to lock mx of v=2
3184439: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
3456381: Thread (0, 2) setting label of node 2
3570599: cv_nodes: Thread (0, 2) UNlocked mx of u=0
3679733: cv_nodes: Thread (0, 2) UNlocked mx of v=2
3785480: thread (0, 2) starts spawning
4631818: thread (0, 1) generated thread (1, 2)
4858051: (enter) I am tid: 140215436953152 with edge: (1, 2) 
5071455: Thread (1, 2) trying to lock mx of u=1
5091547: Thread (1, 2) locked mx of u=1
6179653: Thread (1, 2) trying to lock mx of v=2
6203115: Thread (1, 2) locked mx of v=2
6221943: cv_nodes: Thread (1, 2) UNlocked mx of u=1
6239244: cv_nodes: Thread (1, 2) UNlocked mx of v=2
6261291: thread (1, 2) starts spawning
6277542: thread (1, 2) finished spawning; nb: 0 ng: 5
6318467: (2) thread (1, 2) will block on cv, nb: 0 ng: 5
6368830: (2) thread (1, 2) checks cv
6408500: -> (bef) nb: 0, ng: 5
6447318: -> thread (1, 2) stops, sem: 0
6481764: -> (aft) nb: 1, ng: 5
7916064: thread (0, 2) generated thread (2, 3)
7989156: thread (0, 2) finished spawning; nb: 1 ng: 5
8057932: (2) thread (0, 2) will block on cv, nb: 1 ng: 5
8204972: thread (0, 1) generated thread (1, 3)
8230988: (2) thread (0, 2) checks cv
8240370: thread (0, 1) finished spawning; nb: 1 ng: 5
8251093: -> (bef) nb: 1, ng: 5
8289400: (enter) I am tid: 140215428560448 with edge: (2, 3) 
8346404: -> thread (0, 2) stops, sem: 0
8243426: (enter) I am tid: 140215420167744 with edge: (1, 3) 
8353982: Thread (2, 3) trying to lock mx of u=2
8256034: (2) thread (0, 1) will block on cv, nb: 1 ng: 5
8426041: -> (aft) nb: 2, ng: 5
8501549: Thread (1, 3) trying to lock mx of u=1
8562737: Thread (2, 3) locked mx of u=2
8734953: (2) thread (0, 1) checks cv
8744241: Thread (1, 3) locked mx of u=1
9004223: Thread (1, 3) trying to lock mx of v=3
9047111: Thread (1, 3) locked mx of v=3
FORWARD EDGE (1, 3)
9081812: Thread (1, 3) setting label of node 3
9101298: cv_nodes: Thread (1, 3) UNlocked mx of u=1
9117257: cv_nodes: Thread (1, 3) UNlocked mx of v=3
8830342: Thread (2, 3) trying to lock mx of v=3
9133950: I am the augmenter thread (1, 3)
9168744: Thread (2, 3) locked mx of v=3
8891031: -> (bef) nb: 2, ng: 5
9208187: cv_nodes: Thread (2, 3) UNlocked mx of u=2
9220722: -> thread (0, 1) stops, sem: 0
9288911: cv_nodes: Thread (2, 3) UNlocked mx of v=3
9340071: -> (aft) nb: 3, ng: 5
9392607: (2) thread (2, 3) will block on cv, nb: 3 ng: 5
9168292: *. Augmenter edge: (1, 3) is waiting on cv augment
9512438: (2) thread (2, 3) checks cv
9613690: -> (bef) nb: 3, ng: 5
9657310: -> thread (2, 3) stops, sem: 0
9700047: -> (aft) nb: 4, ng: 5
9771087: thread (1, 3), nb: 4 ng: 5
9838122: *. Augmenter - edge: (1, 3) gets out of cv augment
9913429: augmented flow: 3
10012305: reset labels
10149582: (2) thread (0, 2) checks cv
10215304: -> (bef) nb: 0, ng: 5
10237185: -> thread: (0, 2) restarts, sem: 1
10157394: Thread (1, 3) trying to lock mx of u=1
10313678: -> (aft) nb: 0, ng: 5
10373569: Thread (1, 3) locked mx of u=1
10456528: Thread (1, 3) trying to lock mx of v=3
10496412: (2) thread (0, 1) checks cv
10448707: (2) thread (0, 2) gets out of cv
10560078: -> (bef) nb: 0, ng: 5
10571783: Thread (0, 2) trying to lock mx of u=0
10516711: Thread (1, 3) locked mx of v=3
10579428: -> thread: (0, 1) restarts, sem: 1
10628436: Thread (0, 2) locked mx of u=0
10704117: -> (aft) nb: 0, ng: 5
10718482: Thread (0, 2) trying to lock mx of v=2
10742132: Thread (0, 2) locked mx of v=2
10743069: (2) thread (0, 1) gets out of cv
FORWARD EDGE (0, 2)
10762931: Thread (0, 1) trying to lock mx of u=0
10769880: Thread (0, 2) setting label of node 2
10799993: (2) thread (2, 3) checks cv
10824524: -> (bef) nb: 0, ng: 5
10869433: Thread (0, 1) locked mx of u=0
10929881: Thread (0, 1) trying to lock mx of v=1
10949918: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
10971186: Thread (0, 1) setting label of node 1
10985746: cv_nodes: Thread (0, 1) UNlocked mx of u=0
10997548: cv_nodes: Thread (0, 1) UNlocked mx of v=1
FORWARD EDGE (1, 3)
10871067: -> thread: (2, 3) restarts, sem: 1
11019986: thread (0, 1) starts spawning
11056125: -> (aft) nb: 0, ng: 5
11065900: thread (0, 1) finished spawning; nb: 0 ng: 5
11109589: (2) thread (0, 1) will block on cv, nb: 0 ng: 5
11166949: (2) thread (1, 2) checks cv
11187418: -> (bef) nb: 0, ng: 5
11108079: (2) thread (2, 3) gets out of cv
10833977: cv_nodes: Thread (0, 2) UNlocked mx of u=0
11018973: Thread (1, 3) has remaining capacity <= 0: 0
11197320: -> thread: (1, 2) restarts, sem: 1
11240720: Thread (2, 3) trying to lock mx of u=2
11298990: cv_nodes: Thread (0, 2) UNlocked mx of v=2
11365116: cv_nodes: Thread (1, 3) UNlocked mx of u=1
11590427: cv_nodes: Thread (1, 3) UNlocked mx of v=3
11623901: (2) thread (1, 3) will block on cv, nb: 0 ng: 5
11417452: -> (aft) nb: 0, ng: 5
11478639: Thread (2, 3) locked mx of u=2
11553067: thread (0, 2) starts spawning
11806109: (2) thread (0, 1) checks cv
11834687: -> (bef) nb: 0, ng: 5
11733147: (2) thread (1, 2) gets out of cv
11897720: -> thread (0, 1) stops, sem: 0
11927861: Thread (1, 2) trying to lock mx of u=1
11941820: -> (aft) nb: 1, ng: 5
11790307: Thread (2, 3) trying to lock mx of v=3
11834820: thread (0, 2) finished spawning; nb: 0 ng: 5
12088701: (2) thread (0, 2) will block on cv, nb: 1 ng: 5
12039736: Thread (2, 3) locked mx of v=3
FORWARD EDGE (2, 3)
12135917: (2) thread (0, 2) checks cv
11974086: Thread (1, 2) locked mx of u=1
12263079: Thread (2, 3) setting label of node 3
12307696: -> (bef) nb: 1, ng: 5
12451557: -> thread (0, 2) stops, sem: 0
12415975: cv_nodes: Thread (2, 3) UNlocked mx of u=2
12348544: Thread (1, 2) trying to lock mx of v=2
12618601: Thread (1, 2) locked mx of v=2
12637139: cv_nodes: Thread (1, 2) UNlocked mx of u=1
12647808: cv_nodes: Thread (1, 2) UNlocked mx of v=2
12681031: thread (1, 2) starts spawning
12712740: thread (1, 2) finished spawning; nb: 2 ng: 5
12744990: (2) thread (1, 2) will block on cv, nb: 2 ng: 5
12500524: -> (aft) nb: 2, ng: 5
12564370: cv_nodes: Thread (2, 3) UNlocked mx of v=3
12863486: I am the augmenter thread (2, 3)
12881704: (2) thread (1, 3) checks cv
12920579: *. Augmenter edge: (2, 3) is waiting on cv augment
12935872: -> (bef) nb: 2, ng: 5
12988815: -> thread (1, 3) stops, sem: 0
13039563: -> (aft) nb: 3, ng: 5
13139265: (2) thread (1, 2) checks cv
13173760: -> (bef) nb: 3, ng: 5
13204284: -> thread (1, 2) stops, sem: 0
13233586: -> (aft) nb: 4, ng: 5
13374648: thread (2, 3), nb: 4 ng: 5
13473957: *. Augmenter - edge: (2, 3) gets out of cv augment
13534365: augmented flow: 3
13596439: reset labels
13684607: (2) thread (0, 1) checks cv
13723154: Thread (2, 3) trying to lock mx of u=2
13728500: -> (bef) nb: 0, ng: 5
13741492: Thread (2, 3) locked mx of u=2
13745968: -> thread: (0, 1) restarts, sem: 1
13754579: Thread (2, 3) trying to lock mx of v=3
13764040: -> (aft) nb: 0, ng: 5
13769995: Thread (2, 3) locked mx of v=3
13779285: (2) thread (0, 1) gets out of cv
13793114: Thread (0, 1) trying to lock mx of u=0
13813720: Thread (0, 1) locked mx of u=0
13853344: Thread (0, 1) trying to lock mx of v=1
13896704: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
13984490: Thread (0, 1) setting label of node 1
14056990: cv_nodes: Thread (0, 1) UNlocked mx of u=0
14101555: cv_nodes: Thread (0, 1) UNlocked mx of v=1
14155353: thread (0, 1) starts spawning
14200373: thread (0, 1) finished spawning; nb: 0 ng: 5
14247733: (2) thread (0, 1) will block on cv, nb: 0 ng: 5
14434514: (2) thread (0, 1) checks cv
14534115: -> (bef) nb: 0, ng: 5
14554272: -> thread (0, 1) stops, sem: 0
14568925: -> (aft) nb: 1, ng: 5
14632862: (2) thread (0, 2) checks cv
14670391: -> (bef) nb: 1, ng: 5
14684141: -> thread: (0, 2) restarts, sem: 1
14699081: -> (aft) nb: 1, ng: 5
14733951: (2) thread (0, 2) gets out of cv
14749061: Thread (0, 2) trying to lock mx of u=0
14763165: Thread (0, 2) locked mx of u=0
14771880: Thread (0, 2) trying to lock mx of v=2
14780096: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
14797719: Thread (0, 2) has remaining capacity <= 0: 0
14807450: cv_nodes: Thread (0, 2) UNlocked mx of u=0
14817782: cv_nodes: Thread (0, 2) UNlocked mx of v=2
14833227: thread (0, 2) starts spawning
14844931: thread (0, 2) finished spawning; nb: 1 ng: 5
14857080: (2) thread (0, 2) will block on cv, nb: 1 ng: 5
14868049: (2) thread (0, 2) checks cv
14876147: -> (bef) nb: 1, ng: 5
14885586: -> thread (0, 2) stops, sem: 0
14895346: -> (aft) nb: 2, ng: 5
14994940: (2) thread (1, 3) checks cv
15032864: -> (bef) nb: 2, ng: 5
15068651: -> thread: (1, 3) restarts, sem: 1
15079592: -> (aft) nb: 2, ng: 5
15108769: (2) thread (1, 3) gets out of cv
15131247: Thread (1, 3) trying to lock mx of u=1
15141758: Thread (1, 3) locked mx of u=1
15149657: Thread (1, 3) trying to lock mx of v=3
15159672: Thread (1, 3) locked mx of v=3
FORWARD EDGE (1, 3)
15174239: Thread (1, 3) has remaining capacity <= 0: 0
15184064: cv_nodes: Thread (1, 3) UNlocked mx of u=1
15192367: cv_nodes: Thread (1, 3) UNlocked mx of v=3
15200670: (2) thread (1, 3) will block on cv, nb: 2 ng: 5
15211790: (2) thread (1, 3) checks cv
15219380: -> (bef) nb: 2, ng: 5
15227413: -> thread (1, 3) stops, sem: 0
15238503: -> (aft) nb: 3, ng: 5
15336666: (2) thread (1, 2) checks cv
15380029: -> (bef) nb: 3, ng: 5
15394553: -> thread: (1, 2) restarts, sem: 1
15404906: -> (aft) nb: 3, ng: 5
15420536: (2) thread (1, 2) gets out of cv
15430458: Thread (1, 2) trying to lock mx of u=1
15440654: Thread (1, 2) locked mx of u=1
15450537: Thread (1, 2) trying to lock mx of v=2
15458957: Thread (1, 2) locked mx of v=2
FORWARD EDGE (1, 2)
15478973: Thread (1, 2) setting label of node 2
15510030: cv_nodes: Thread (1, 2) UNlocked mx of u=1
15526797: cv_nodes: Thread (1, 2) UNlocked mx of v=2
15541590: thread (1, 2) starts spawning
15555468: thread (1, 2) finished spawning; nb: 3 ng: 5
15567087: done (by worker), T(1, 2)
FORWARD EDGE (2, 3)
15652046: Thread (2, 3) setting label of node 3
15696672: cv_nodes: Thread (2, 3) UNlocked mx of u=2
15709388: cv_nodes: Thread (2, 3) UNlocked mx of v=3
15717479: I am the augmenter thread (2, 3)
15726695: *. Augmenter edge: (2, 3) is waiting on cv augment
15725238: (2) thread (1, 3) checks cv
15743551: -> (bef) nb: 3, ng: 5
15756044: -> thread: (1, 3) restarts, sem: 1
15765604: -> (aft) nb: 3, ng: 5
15797014: (2) thread (1, 3) gets out of cv
15811812: (1) thread (1, 3) will block on cv, nb: 3 ng: 5
15831218: thread (2, 3), nb: 3 ng: 5
15615835: (return) end of thread (1, 2)
15892318: (2) thread (0, 1) checks cv
15947932: -> (bef) nb: 3, ng: 4
15982740: -> thread: (0, 1) restarts, sem: 1
16016006: -> (aft) nb: 3, ng: 4
16058036: (2) thread (0, 1) gets out of cv
16071723: (1) thread (1, 3) checks cv
16094520: (1) thread (0, 1) will block on cv, nb: 3 ng: 4
16177185: -> (bef) nb: 3, ng: 4
16224610: -> thread (1, 3) stops, sem: 0
16260928: -> (aft) nb: 4, ng: 4
16347950: (2) thread (0, 2) checks cv
16393798: -> (bef) nb: 4, ng: 4
16426844: -> thread: (0, 2) restarts, sem: 1
16458800: -> (aft) nb: 4, ng: 4
16519035: (2) thread (0, 2) gets out of cv
16559508: (1) thread (0, 2) will block on cv, nb: 4 ng: 4
16538956: (1) thread (0, 1) checks cv
16667882: -> (bef) nb: 4, ng: 4
16716314: -> thread (0, 1) stops, sem: 0
16767910: -> (aft) nb: 5, ng: 4
16912737: (1) thread (0, 2) checks cv
16963980: -> (bef) nb: 5, ng: 4
16979562: -> thread (0, 2) stops, sem: 0
16992537: -> (aft) nb: 6, ng: 4





Number of nodes: 3
Graph read with nodes: 
0 1 2 
starting
778228: (enter) I am tid: 139994605807168 with edge: (0, 1) 
897161: Thread (0, 1) trying to lock mx of u=0
967250: Thread (0, 1) locked mx of u=0
1028951: Thread (0, 1) trying to lock mx of v=1
1091127: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
1221206: Thread (0, 1) setting label of node 1
1289983: cv_nodes: Thread (0, 1) UNlocked mx of u=0
1351569: cv_nodes: Thread (0, 1) UNlocked mx of v=1
1418695: thread (0, 1) starts spawning
2175100: thread (0, 1) generated thread (1, 2)
2215605: (enter) I am tid: 139994589021760 with edge: (1, 2) 
2284580: thread (0, 1) finished spawning; nb: 0 ng: 2
2369550: Thread (1, 2) trying to lock mx of u=1
2449878: (2) thread (0, 1) will block on cv, nb: 0 ng: 2
2531590: Thread (1, 2) locked mx of u=1
2714541: Thread (1, 2) trying to lock mx of v=2
2638194: (2) thread (0, 1) checks cv
2807229: Thread (1, 2) locked mx of v=2
2886332: -> (bef) nb: 0, ng: 2
FORWARD EDGE (1, 2)
3067089: -> thread (0, 1) stops, sem: 0
3114917: Thread (1, 2) setting label of node 2
3205404: -> (aft) nb: 1, ng: 2
3296741: cv_nodes: Thread (1, 2) UNlocked mx of u=1
3436875: cv_nodes: Thread (1, 2) UNlocked mx of v=2
3495100: I am the augmenter thread (1, 2)
3548251: *. Augmenter edge: (1, 2) is waiting on cv augment
3616360: thread (1, 2), nb: 1 ng: 2
3681801: *. Augmenter - edge: (1, 2) gets out of cv augment
3839692: augmented flow: 1
3920879: reset labels
3997759: Thread (1, 2) trying to lock mx of u=1
4013876: (2) thread (0, 1) checks cv
4090479: Thread (1, 2) locked mx of u=1
4178274: -> (bef) nb: 0, ng: 2
4271675: Thread (1, 2) trying to lock mx of v=2
4368505: -> thread: (0, 1) restarts, sem: 1
4461537: Thread (1, 2) locked mx of v=2
4545238: -> (aft) nb: 0, ng: 2
4658023: (2) thread (0, 1) gets out of cv
4754121: Thread (0, 1) trying to lock mx of u=0
4824289: Thread (0, 1) locked mx of u=0
4882056: Thread (0, 1) trying to lock mx of v=1
4937461: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
5055819: Thread (0, 1) setting label of node 1
5160648: cv_nodes: Thread (0, 1) UNlocked mx of u=0
5254561: cv_nodes: Thread (0, 1) UNlocked mx of v=1
5326171: thread (0, 1) starts spawning
FORWARD EDGE (1, 2)
5356009: thread (0, 1) finished spawning; nb: 0 ng: 2
5367437: Thread (1, 2) has remaining capacity <= 0: 0
5384321: (2) thread (0, 1) will block on cv, nb: 0 ng: 2
5397433: cv_nodes: Thread (1, 2) UNlocked mx of u=1
5460511: cv_nodes: Thread (1, 2) UNlocked mx of v=2
5408297: (2) thread (0, 1) checks cv
5488659: (2) thread (1, 2) will block on cv, nb: 0 ng: 2
5561920: -> (bef) nb: 0, ng: 2
5763969: -> thread (0, 1) stops, sem: 0
5829009: -> (aft) nb: 1, ng: 2
5880771: (2) thread (1, 2) checks cv
5924010: -> (bef) nb: 1, ng: 2
6005090: -> thread (1, 2) stops, sem: 0
6077845: -> (aft) nb: 2, ng: 2
6568866: (enter) I am tid: 139994597414464 with edge: (0, 2) 
6662552: Thread (0, 2) trying to lock mx of u=0
7042146: Thread (0, 2) locked mx of u=0
7078048: Thread (0, 2) trying to lock mx of v=2
7099200: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
7140789: Thread (0, 2) setting label of node 2
7169799: cv_nodes: Thread (0, 2) UNlocked mx of u=0
7191823: cv_nodes: Thread (0, 2) UNlocked mx of v=2
7208911: I am the augmenter thread (0, 2)
7225012: *. Augmenter edge: (0, 2) is waiting on cv augment
7250404: thread (0, 2), nb: 2 ng: 2
7497210: num threads to join in solve: 2




Number of nodes: 3
Graph read with nodes: 
0 1 2 
starting
857534: (enter) I am tid: 139964739212864 with edge: (0, 1) 
924144: Thread (0, 1) trying to lock mx of u=0
977104: Thread (0, 1) locked mx of u=0
1088447: Thread (0, 1) trying to lock mx of v=1
1132269: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
1196067: Thread (0, 1) setting label of node 1
1242010: cv_nodes: Thread (0, 1) UNlocked mx of u=0
1285384: cv_nodes: Thread (0, 1) UNlocked mx of v=1
1310141: thread (0, 1) starts spawning
2015489: thread (0, 1) generated thread (1, 2)
2046505: (enter) I am tid: 139964730820160 with edge: (1, 2) 
2099325: thread (0, 1) finished spawning; nb: 0 ng: 2
2110896: Thread (1, 2) trying to lock mx of u=1
2122748: (2) thread (0, 1) will block on cv, nb: 0 ng: 2
2129178: Thread (1, 2) locked mx of u=1
2141150: (2) thread (0, 1) checks cv
2148555: Thread (1, 2) trying to lock mx of v=2
2170362: -> (bef) nb: 0, ng: 2
2176511: Thread (1, 2) locked mx of v=2
FORWARD EDGE (1, 2)
2194475: -> thread (0, 1) stops, sem: 0
2349818: Thread (1, 2) setting label of node 2
2360016: -> (aft) nb: 1, ng: 2
2371794: cv_nodes: Thread (1, 2) UNlocked mx of u=1
2398488: cv_nodes: Thread (1, 2) UNlocked mx of v=2
2415698: I am the augmenter thread (1, 2)
2432574: *. Augmenter edge: (1, 2) is waiting on cv augment
2450319: thread (1, 2), nb: 1 ng: 2
2470355: *. Augmenter - edge: (1, 2) gets out of cv augment
2510918: augmented flow: 1
2508896: (enter) I am tid: 139964747605568 with edge: (0, 2) 
2526780: num threads to join in solve: 2
2539460: reset labels
2540957: (1) thread (0, 2) will block on cv, nb: 1 ng: 3
2564072: (1) thread (0, 2) checks cv
2585433: Thread (1, 2) trying to lock mx of u=1
2637098: -> (bef) nb: 0, ng: 3
2743476: Thread (1, 2) locked mx of u=1
2873211: -> thread (0, 2) stops, sem: 0
2920847: Thread (1, 2) trying to lock mx of v=2
2979210: -> (aft) nb: 1, ng: 3
3041579: Thread (1, 2) locked mx of v=2
3149044: (2) thread (0, 1) checks cv
3198363: -> (bef) nb: 1, ng: 3
3240189: -> thread: (0, 1) restarts, sem: 1
3288077: -> (aft) nb: 1, ng: 3
3331256: (2) thread (0, 1) gets out of cv
3374206: Thread (0, 1) trying to lock mx of u=0
3421560: Thread (0, 1) locked mx of u=0
3462020: Thread (0, 1) trying to lock mx of v=1
3501496: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
3586462: Thread (0, 1) setting label of node 1
3658475: cv_nodes: Thread (0, 1) UNlocked mx of u=0
3721401: cv_nodes: Thread (0, 1) UNlocked mx of v=1
FORWARD EDGE (1, 2)
3747261: Thread (1, 2) has remaining capacity <= 0: 0
3747963: thread (0, 1) starts spawning
3789616: cv_nodes: Thread (1, 2) UNlocked mx of u=1
3849413: thread (0, 1) finished spawning; nb: 1 ng: 3
3855560: cv_nodes: Thread (1, 2) UNlocked mx of v=2
3915409: (2) thread (0, 1) will block on cv, nb: 1 ng: 3
3969354: (2) thread (1, 2) will block on cv, nb: 1 ng: 3
4039304: (2) thread (0, 1) checks cv
4132241: -> (bef) nb: 1, ng: 3
4176688: -> thread (0, 1) stops, sem: 0
4221118: -> (aft) nb: 2, ng: 3
4295581: (2) thread (1, 2) checks cv
4333871: -> (bef) nb: 2, ng: 3
4377981: -> thread (1, 2) stops, sem: 0
4433702: -> (aft) nb: 3, ng: 3




Number of nodes: 3
Graph read with nodes: 
0 1 2 
starting
867991: (enter) I am tid: 140213839980096 with edge: (0, 1) 
1000041: Thread (0, 1) trying to lock mx of u=0
1069994: Thread (0, 1) locked mx of u=0
1126370: Thread (0, 1) trying to lock mx of v=1
1176503: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
1266713: Thread (0, 1) setting label of node 1
1323521: cv_nodes: Thread (0, 1) UNlocked mx of u=0
1384429: cv_nodes: Thread (0, 1) UNlocked mx of v=1
1447757: thread (0, 1) starts spawning
2237570: thread (0, 1) generated thread (1, 2)
2283659: (enter) I am tid: 140213823194688 with edge: (1, 2) 
2302685: thread (0, 1) finished spawning; nb: 0 ng: 2
2334046: Thread (1, 2) trying to lock mx of u=1
2346162: (2) thread (0, 1) will block on cv, nb: 0 ng: 2
2361223: Thread (1, 2) locked mx of u=1
2373641: (2) thread (0, 1) checks cv
2385828: Thread (1, 2) trying to lock mx of v=2
2397106: -> (bef) nb: 0, ng: 2
2415558: Thread (1, 2) locked mx of v=2
2435591: -> thread (0, 1) stops, sem: 0
FORWARD EDGE (1, 2)
2504361: -> (aft) nb: 1, ng: 2
2540338: Thread (1, 2) setting label of node 2
2612959: cv_nodes: Thread (1, 2) UNlocked mx of u=1
2669579: cv_nodes: Thread (1, 2) UNlocked mx of v=2
2718244: I am the augmenter thread (1, 2)
2741879: *. Augmenter edge: (1, 2) is waiting on cv augment
2796684: thread (1, 2), nb: 1 ng: 2
2855389: *. Augmenter - edge: (1, 2) gets out of cv augment
2923721: augmented flow: 1
2995584: reset labels
3083835: Thread (1, 2) trying to lock mx of u=1
3097084: (2) thread (0, 1) checks cv
3136456: -> (bef) nb: 0, ng: 2
3122922: Thread (1, 2) locked mx of u=1
3190199: -> thread: (0, 1) restarts, sem: 1
3285852: Thread (1, 2) trying to lock mx of v=2
3299092: -> (aft) nb: 0, ng: 2
3311194: Thread (1, 2) locked mx of v=2
3329864: (2) thread (0, 1) gets out of cv
3350566: Thread (0, 1) trying to lock mx of u=0
3711633: (enter) I am tid: 140213831587392 with edge: (0, 2) 
3675411: num threads to join in solve: 2
3780155: Thread (0, 1) locked mx of u=0
3948619: Thread (0, 1) trying to lock mx of v=1
3974736: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
4010712: Thread (0, 1) setting label of node 1
4038619: cv_nodes: Thread (0, 1) UNlocked mx of u=0
4054007: cv_nodes: Thread (0, 1) UNlocked mx of v=1
4083353: thread (0, 1) starts spawning
4104813: thread (0, 1) finished spawning; nb: 0 ng: 3
4127317: (2) thread (0, 1) will block on cv, nb: 0 ng: 3
4154409: (2) thread (0, 1) checks cv
4171639: -> (bef) nb: 0, ng: 3
4192576: -> thread (0, 1) stops, sem: 0
4200813: Thread (0, 2) trying to lock mx of u=0
4213866: -> (aft) nb: 1, ng: 3
4228061: Thread (0, 2) locked mx of u=0
4255957: Thread (0, 2) trying to lock mx of v=2
4276403: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
4318790: Thread (0, 2) setting label of node 2
4341160: cv_nodes: Thread (0, 2) UNlocked mx of u=0
4359940: cv_nodes: Thread (0, 2) UNlocked mx of v=2
4375093: I am the augmenter thread (0, 2)
4389379: *. Augmenter edge: (0, 2) is waiting on cv augment
4410747: thread (0, 2), nb: 1 ng: 3
4431543: *. Augmenter - edge: (0, 2) gets out of cv augment
4463676: augmented flow: 2
4497328: done (augmenter), T(0, 2)
4515671: reset labels
4959270: (2) thread (0, 1) checks cv
5059725: -> (bef) nb: 0, ng: 3
5088779: -> thread: (0, 1) restarts, sem: 1
5107671: -> (aft) nb: 0, ng: 3
5136666: (2) thread (0, 1) gets out of cv
5158455: i'm a thread (0, 1) and joining thread: 140213823194688
5705920: (return) end of thread (0, 2)


=================================================================


WARNING: ThreadSanitizer: data race (pid=71845)
  Write of size 8 at 0x7b0400000058 by thread T15 (mutexes: write M85):
    #0 operator delete(void*, unsigned long) ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 (libtsan.so.0+0x8e878)
    #1 Node::resetLabel() /home/giosilve/Maximum-Flow-Problem/src/NodeFirst.hpp:77 (MaxFlowSolverP+0x6a60)
    #2 MaxFlowSolverParallel::resetLabels() /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:810 (MaxFlowSolverP+0xab8f)
    #3 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:619 (MaxFlowSolverP+0x9a90)
    #4 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #5 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #6 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #7 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #8 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #9 <null> <null> (libstdc++.so.6+0xdc252)

  Previous read of size 8 at 0x7b0400000058 by thread T13 (mutexes: write M86, write M83):
    #0 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:536 (MaxFlowSolverP+0x94b6)
    #1 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #2 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #3 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #4 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #5 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #6 <null> <null> (libstdc++.so.6+0xdc252)

  Mutex M85 (0x7b3c00000130) created at:
    #0 pthread_mutex_lock ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4240 (libtsan.so.0+0x53908)
    #1 __gthread_mutex_lock /usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h:749 (MaxFlowSolverP+0x5d37)
    #2 std::mutex::lock() /usr/include/c++/11/bits/std_mutex.h:100 (MaxFlowSolverP+0x601c)
    #3 std::unique_lock<std::mutex>::lock() /usr/include/c++/11/bits/unique_lock.h:139 (MaxFlowSolverP+0xd135)
    #4 std::unique_lock<std::mutex>::unique_lock(std::mutex&) /usr/include/c++/11/bits/unique_lock.h:69 (MaxFlowSolverP+0xb294)
    #5 Node::setLabel(int, char, long) /home/giosilve/Maximum-Flow-Problem/src/NodeFirst.hpp:61 (MaxFlowSolverP+0x68fc)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:540 (MaxFlowSolverP+0x9547)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

  Mutex M86 (0x7b3c000001f8) created at:
    #0 pthread_mutex_lock ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4240 (libtsan.so.0+0x53908)
    #1 __gthread_mutex_lock /usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h:749 (MaxFlowSolverP+0x5d37)
    #2 std::mutex::lock() /usr/include/c++/11/bits/std_mutex.h:100 (MaxFlowSolverP+0x601c)
    #3 Node::lockSharedMutex() /home/giosilve/Maximum-Flow-Problem/src/NodeFirst.hpp:154 (MaxFlowSolverP+0x6dae)
    #4 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:405 (MaxFlowSolverP+0x8fda)
    #5 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #6 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #7 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #8 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #9 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #10 <null> <null> (libstdc++.so.6+0xdc252)

  Mutex M83 (0x7b3c00000108) created at:
    #0 pthread_mutex_lock ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4240 (libtsan.so.0+0x53908)
    #1 __gthread_mutex_lock /usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h:749 (MaxFlowSolverP+0x5d37)
    #2 std::mutex::lock() /usr/include/c++/11/bits/std_mutex.h:100 (MaxFlowSolverP+0x601c)
    #3 Node::lockSharedMutex() /home/giosilve/Maximum-Flow-Problem/src/NodeFirst.hpp:154 (MaxFlowSolverP+0x6dae)
    #4 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:405 (MaxFlowSolverP+0x8fda)
    #5 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #6 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #7 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #8 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #9 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #10 <null> <null> (libstdc++.so.6+0xdc252)

  Thread T15 (tid=71861, running) created by thread T11 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc328)
    #2 void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/ext/new_allocator.h:162 (MaxFlowSolverP+0x1075d)
    #3 void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::allocator<std::thread>&, std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/alloc_traits.h:516 (MaxFlowSolverP+0xe947)
    #4 void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:449 (MaxFlowSolverP+0xeae5)
    #5 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:121 (MaxFlowSolverP+0xc6b6)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:644 (MaxFlowSolverP+0x9f0f)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

  Thread T13 (tid=71859, running) created by thread T11 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc328)
    #2 void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/ext/new_allocator.h:162 (MaxFlowSolverP+0x1075d)
    #3 void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::allocator<std::thread>&, std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/alloc_traits.h:516 (MaxFlowSolverP+0xe947)
    #4 void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:449 (MaxFlowSolverP+0xeae5)
    #5 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:121 (MaxFlowSolverP+0xc6b6)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:644 (MaxFlowSolverP+0x9f0f)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x156d5)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x1546e)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x15252)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x15186)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x15138)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

SUMMARY: ThreadSanitizer: data race ../../../../src/libsanitizer/tsan/tsan_new_delete.cpp:150 in operator delete(void*, unsigned long)
==================
Max flow: 7
found in: 218694 micros

Number of nodes: 4
Graph read with nodes: 
0 1 2 3 
Max flow: 7
found in: 5431 micros

Number of nodes: 4
Graph read with nodes: 
0 1 2 3 
Max flow: 7
found in: 4850 micros


Average time: 48121 micros
ThreadSanitizer: reported 1 warnings


-----------------------------------
Number of nodes: 4
Graph read with nodes: 
0 1 2 3 
starting
1978768: (enter) I am tid: 139626507396672 with edge: (0, 1) 
2211628: Thread (0, 1) trying to lock mx of u=0
2322599: Thread (0, 1) locked mx of u=0
2420432: Thread (0, 1) trying to lock mx of v=1
2521791: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
2667932: Thread (0, 1) setting label of node 1
2712995: num threads to join in solve: 2
2743353: cv_nodes: Thread (0, 1) UNlocked mx of u=0
2810542: (enter) I am tid: 139626499003968 with edge: (0, 2) 
2865362: cv_nodes: Thread (0, 1) UNlocked mx of v=1
2922463: Thread (0, 2) trying to lock mx of u=0
3051436: thread (0, 1) starts spawning
3093722: Thread (0, 2) locked mx of u=0
3254390: Thread (0, 2) trying to lock mx of v=2
3335708: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
3519931: Thread (0, 2) setting label of node 2
3589142: cv_nodes: Thread (0, 2) UNlocked mx of u=0
3643625: cv_nodes: Thread (0, 2) UNlocked mx of v=2
3671703: thread (0, 2) starts spawning
4506642: thread (0, 1) generated thread (1, 2)
4626821: (enter) I am tid: 139626490611264 with edge: (1, 2) 
4713678: thread (0, 2) generated thread (2, 3)
4778210: Thread (1, 2) trying to lock mx of u=1
4781783: (enter) I am tid: 139626482218560 with edge: (2, 3) 
4863696: thread (0, 2) finished spawning; nb: 0 ng: 5
4952409: Thread (1, 2) locked mx of u=1
5017419: Thread (2, 3) trying to lock mx of u=2
5116705: (2) thread (0, 2) will block on cv, nb: 0 ng: 5
5175872: Thread (1, 2) trying to lock mx of v=2
5353049: (2) thread (0, 2) checks cv
5247291: Thread (2, 3) locked mx of u=2
5467879: -> (bef) nb: 0, ng: 5
5541078: Thread (2, 3) trying to lock mx of v=3
5664028: -> thread (0, 2) stops, sem: 0
5758193: Thread (2, 3) locked mx of v=3
5796831: -> (aft) nb: 1, ng: 5
5584247: thread (0, 1) generated thread (1, 3)
5625589: (enter) I am tid: 139626473825856 with edge: (1, 3) 
FORWARD EDGE (2, 3)
6135734: Thread (1, 3) trying to lock mx of u=1
6159621: Thread (2, 3) setting label of node 3
6020056: thread (0, 1) finished spawning; nb: 1 ng: 5
6291504: cv_nodes: Thread (2, 3) UNlocked mx of u=2
6302252: Thread (1, 2) locked mx of v=2
6312255: (2) thread (0, 1) will block on cv, nb: 1 ng: 5
6381770: cv_nodes: Thread (2, 3) UNlocked mx of v=3
6485200: cv_nodes: Thread (1, 2) UNlocked mx of u=1
6494175: Thread (1, 3) locked mx of u=1
6502826: (2) thread (0, 1) checks cv
6577166: I am the augmenter thread (2, 3)
6656622: cv_nodes: Thread (1, 2) UNlocked mx of v=2
6743261: Thread (1, 3) trying to lock mx of v=3
6812764: -> (bef) nb: 1, ng: 5
6906990: *. Augmenter edge: (2, 3) is waiting on cv augment
7028516: thread (1, 2) starts spawning
7076064: Thread (1, 3) locked mx of v=3
7161613: -> thread (0, 1) stops, sem: 0
7370873: thread (1, 2) finished spawning; nb: 1 ng: 5
7437955: cv_nodes: Thread (1, 3) UNlocked mx of u=1
7498087: -> (aft) nb: 2, ng: 5
7628653: (2) thread (1, 2) will block on cv, nb: 2 ng: 5
7688169: cv_nodes: Thread (1, 3) UNlocked mx of v=3
7800884: thread (2, 3), nb: 2 ng: 5
7889436: (2) thread (1, 3) will block on cv, nb: 2 ng: 5
8030971: (2) thread (1, 2) checks cv
8111198: -> (bef) nb: 2, ng: 5
8168074: -> thread (1, 2) stops, sem: 0
8221574: -> (aft) nb: 3, ng: 5
8331632: (2) thread (1, 3) checks cv
8380665: -> (bef) nb: 3, ng: 5
8416451: -> thread (1, 3) stops, sem: 0
8483511: -> (aft) nb: 4, ng: 5
8611467: thread (2, 3), nb: 4 ng: 5
8702557: *. Augmenter - edge: (2, 3) gets out of cv augment
8821747: augmented flow: 3
8958243: reset labels
9105342: (2) thread (0, 2) checks cv
9157472: -> (bef) nb: 0, ng: 5
9243703: -> thread: (0, 2) restarts, sem: 1
9333406: -> (aft) nb: 0, ng: 5
9171914: Thread (2, 3) trying to lock mx of u=2
9464416: (2) thread (0, 1) checks cv
9431661: (2) thread (0, 2) gets out of cv
9502624: Thread (2, 3) locked mx of u=2
9768061: Thread (2, 3) trying to lock mx of v=3
9884580: Thread (2, 3) locked mx of v=3
9602802: -> (bef) nb: 0, ng: 5
9659796: Thread (0, 2) trying to lock mx of u=0
10223599: Thread (0, 2) locked mx of u=0
10351528: Thread (0, 2) trying to lock mx of v=2
10500240: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
10122839: -> thread: (0, 1) restarts, sem: 1
10705905: Thread (0, 2) has remaining capacity <= 0: 0
10821366: -> (aft) nb: 0, ng: 5
10930255: cv_nodes: Thread (0, 2) UNlocked mx of u=0
11056155: (2) thread (0, 1) gets out of cv
11067124: (2) thread (1, 2) checks cv
11063262: cv_nodes: Thread (0, 2) UNlocked mx of v=2
11151859: Thread (0, 1) trying to lock mx of u=0
11218299: -> (bef) nb: 0, ng: 5
11290710: thread (0, 2) starts spawning
11342093: Thread (0, 1) locked mx of u=0
11430789: -> thread: (1, 2) restarts, sem: 1
11628723: -> (aft) nb: 0, ng: 6
11703171: (2) thread (1, 2) gets out of cv
11569423: Thread (0, 1) trying to lock mx of v=1
11847743: Thread (0, 1) locked mx of v=1
11770999: Thread (1, 2) trying to lock mx of u=1
11723365: (2) thread (1, 3) checks cv
FORWARD EDGE (0, 1)
12068820: -> (bef) nb: 0, ng: 6
12141967: Thread (0, 1) setting label of node 1
12211806: -> thread: (1, 3) restarts, sem: 1
12316196: cv_nodes: Thread (0, 1) UNlocked mx of u=0
12319309: -> (aft) nb: 0, ng: 6
12379434: cv_nodes: Thread (0, 1) UNlocked mx of v=1
12438857: thread (0, 1) starts spawning
12388664: Thread (1, 2) locked mx of u=1
12536277: thread (0, 1) finished spawning; nb: 0 ng: 6
12543514: Thread (1, 2) trying to lock mx of v=2
12615544: (2) thread (0, 1) will block on cv, nb: 0 ng: 6
12680847: Thread (1, 2) locked mx of v=2
12741200: (2) thread (0, 1) checks cv
12413742: (2) thread (1, 3) gets out of cv
FORWARD EDGE (1, 2)
12976262: (enter) I am tid: 139626463360576 with edge: (2, 1) 
12939865: thread (0, 2) generated thread (2, 1)
12951203: Thread (1, 3) trying to lock mx of u=1
12872847: -> (bef) nb: 0, ng: 6
13021533: Thread (1, 2) setting label of node 2
13142326: Thread (2, 1) trying to lock mx of v=1
13503841: cv_nodes: Thread (1, 2) UNlocked mx of u=1
13368034: -> thread (0, 1) stops, sem: 0
FORWARD EDGE (2, 3)
13686621: -> (aft) nb: 1, ng: 6
13720618: Thread (2, 3) setting label of node 3
13220078: thread (0, 2) finished spawning; nb: 0 ng: 6
13541566: Thread (1, 3) locked mx of u=1
13633892: cv_nodes: Thread (1, 2) UNlocked mx of v=2
13833487: cv_nodes: Thread (2, 3) UNlocked mx of u=2
13904419: signal to Waiting I am the last, T(0, 2)
13970743: Thread (1, 3) trying to lock mx of v=3
14264004: (2) thread (0, 1) checks cv
14142136: cv_nodes: Thread (2, 3) UNlocked mx of v=3
14251906: i'm a thread (0, 2) and joining thread: 139626482218560
14056537: thread (1, 2) starts spawning
14362311: Thread (1, 3) locked mx of v=3
14372070: -> (bef) nb: 1, ng: 6
14739500: Thread (2, 1) locked mx of v=1
14637453: thread (1, 2) finished spawning; nb: 1 ng: 6
14729678: cv_nodes: Thread (1, 3) UNlocked mx of u=1
14438324: I am the augmenter thread (2, 3)
14797274: -> thread: (0, 1) restarts, sem: 1
14871966: Thread (2, 1) trying to lock mx of u=2
14963700: (2) thread (1, 2) will block on cv, nb: 1 ng: 6
15038436: cv_nodes: Thread (1, 3) UNlocked mx of v=3
15119753: *. Augmenter edge: (2, 3) is waiting on cv augment
15189417: -> (aft) nb: 1, ng: 6
15280635: Thread (2, 1) locked mx of u=2
15639601: (2) thread (1, 2) checks cv
15631948: (2) thread (0, 1) gets out of cv
15468320: (2) thread (1, 3) will block on cv, nb: 1 ng: 6
15668596: cv_nodes: Thread (2, 1) UNlocked mx of u=2
15719644: -> (bef) nb: 1, ng: 6
15800235: i'm a thread (0, 1) and joining thread: 139626490611264
15937745: cv_nodes: Thread (2, 1) UNlocked mx of v=1
16007688: -> thread (1, 2) stops, sem: 0
16241558: thread (2, 1) starts spawning
16301217: -> (aft) nb: 2, ng: 6
16371619: thread (2, 1) finished spawning; nb: 2 ng: 6
16489900: thread (2, 3), nb: 2 ng: 6
16493447: (2) thread (2, 1) will block on cv, nb: 2 ng: 6
16669654: (2) thread (1, 3) checks cv
16744145: -> (bef) nb: 2, ng: 6
16812506: -> thread (1, 3) stops, sem: 0
16861139: -> (aft) nb: 3, ng: 6
16944565: (2) thread (2, 1) checks cv
17026156: -> (bef) nb: 3, ng: 6
17080020: -> thread (2, 1) stops, sem: 0
17138593: -> (aft) nb: 4, ng: 6

-------------------------------------
Number of nodes: 4
Graph read with nodes: 
0 1 2 3 
starting
1213462: (enter) I am tid: 140143156520512 with edge: (0, 1) 
1562752: Thread (0, 1) trying to lock mx of u=0
1647249: Thread (0, 1) locked mx of u=0
1714806: Thread (0, 1) trying to lock mx of v=1
1771508: Thread (0, 1) locked mx of v=1
FORWARD EDGE (0, 1)
1880364: Thread (0, 1) setting label of node 1
1943791: cv_nodes: Thread (0, 1) UNlocked mx of u=0
1994718: cv_nodes: Thread (0, 1) UNlocked mx of v=1
2340111: thread (0, 1) starts spawning
1968733: num threads to join in solve: 2
2434786: (enter) I am tid: 140143148127808 with edge: (0, 2) 
2721355: Thread (0, 2) trying to lock mx of u=0
2770590: Thread (0, 2) locked mx of u=0
2823206: Thread (0, 2) trying to lock mx of v=2
2871889: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
3012559: Thread (0, 2) setting label of node 2
3070514: cv_nodes: Thread (0, 2) UNlocked mx of u=0
3129911: cv_nodes: Thread (0, 2) UNlocked mx of v=2
3186460: thread (0, 2) starts spawning
3475216: thread (0, 1) generated thread (1, 2)
3614970: (enter) I am tid: 140143139735104 with edge: (1, 2) 
3670634: Thread (1, 2) trying to lock mx of u=1
3722121: Thread (1, 2) locked mx of u=1
3841049: Thread (1, 2) trying to lock mx of v=2
3903561: Thread (1, 2) locked mx of v=2
3959650: cv_nodes: Thread (1, 2) UNlocked mx of u=1
4017745: cv_nodes: Thread (1, 2) UNlocked mx of v=2
4092603: thread (1, 2) starts spawning
4144220: thread (1, 2) finished spawning; nb: 0 ng: 5
4200572: (2) thread (1, 2) will block on cv, nb: 0 ng: 5
4265642: (2) thread (1, 2) checks cv
4338140: -> (bef) nb: 0, ng: 5
4533524: -> thread (1, 2) stops, sem: 0
4635795: -> (aft) nb: 1, ng: 5
5041524: thread (0, 2) generated thread (2, 3)
5146664: thread (0, 1) generated thread (1, 3)
5229019: (enter) I am tid: 140143122949696 with edge: (1, 3) 
5170367: thread (0, 2) finished spawning; nb: 1 ng: 5
5077644: (enter) I am tid: 140143131342400 with edge: (2, 3) 
5265858: thread (0, 1) finished spawning; nb: 1 ng: 5
5540458: Thread (2, 3) trying to lock mx of u=2
5567015: Thread (2, 3) locked mx of u=2
5438057: (2) thread (0, 2) will block on cv, nb: 1 ng: 5
5372411: Thread (1, 3) trying to lock mx of u=1
5858064: Thread (1, 3) locked mx of u=1
5885749: Thread (1, 3) trying to lock mx of v=3
5911358: Thread (1, 3) locked mx of v=3
5584678: (2) thread (0, 1) will block on cv, nb: 1 ng: 5
5664768: Thread (2, 3) trying to lock mx of v=3
5741101: (2) thread (0, 2) checks cv
6320515: -> (bef) nb: 1, ng: 5
FORWARD EDGE (1, 3)
6387158: -> thread (0, 2) stops, sem: 0
6470412: Thread (1, 3) setting label of node 3
6529224: -> (aft) nb: 2, ng: 5
6599966: cv_nodes: Thread (1, 3) UNlocked mx of u=1
6773705: cv_nodes: Thread (1, 3) UNlocked mx of v=3
6837745: I am the augmenter thread (1, 3)
6775709: (2) thread (0, 1) checks cv
6946541: *. Augmenter edge: (1, 3) is waiting on cv augment
6792070: Thread (2, 3) locked mx of v=3
7008506: -> (bef) nb: 2, ng: 5
7189918: -> thread (0, 1) stops, sem: 0
7070485: cv_nodes: Thread (2, 3) UNlocked mx of u=2
7217703: -> (aft) nb: 3, ng: 5
7300661: cv_nodes: Thread (2, 3) UNlocked mx of v=3
7444562: (2) thread (2, 3) will block on cv, nb: 3 ng: 5
7461777: thread (1, 3), nb: 3 ng: 5
7662438: (2) thread (2, 3) checks cv
7727866: -> (bef) nb: 3, ng: 5
7779442: -> thread (2, 3) stops, sem: 0
7866687: -> (aft) nb: 4, ng: 5
8011153: thread (1, 3), nb: 4 ng: 5
8072468: *. Augmenter - edge: (1, 3) gets out of cv augment
8132779: augmented flow: 3
8245465: reset labels
8377212: (2) thread (1, 2) checks cv
8436209: Thread (1, 3) trying to lock mx of u=1
8443843: -> (bef) nb: 0, ng: 5
8513061: Thread (1, 3) locked mx of u=1
8591149: -> thread: (1, 2) restarts, sem: 1
8669981: Thread (1, 3) trying to lock mx of v=3
8748481: -> (aft) nb: 0, ng: 5
8854540: Thread (1, 3) locked mx of v=3
8981178: (2) thread (0, 2) checks cv
9090410: -> (bef) nb: 0, ng: 5
8946004: (2) thread (1, 2) gets out of cv
9329574: Thread (1, 2) trying to lock mx of u=1
9180339: -> thread: (0, 2) restarts, sem: 1
9360167: Thread (1, 2) locked mx of u=1
9513424: Thread (1, 2) trying to lock mx of v=2
9433997: -> (aft) nb: 0, ng: 5
9749251: Thread (1, 2) locked mx of v=2
9879354: (2) thread (0, 2) gets out of cv
9908078: Thread (0, 2) trying to lock mx of u=0
9959410: (2) thread (0, 1) checks cv
9973795: Thread (0, 2) locked mx of u=0
10044340: -> (bef) nb: 0, ng: 5
10122550: Thread (0, 2) trying to lock mx of v=2
10234292: -> thread: (0, 1) restarts, sem: 1
10389192: -> (aft) nb: 0, ng: 5
10466618: (2) thread (0, 1) gets out of cv
10548011: Thread (0, 1) trying to lock mx of u=0
10485655: (2) thread (2, 3) checks cv
10332883: Thread (0, 2) locked mx of v=2
FORWARD EDGE (0, 2)
10866313: Thread (0, 2) setting label of node 2
10706733: -> (bef) nb: 0, ng: 5
10998022: -> thread: (2, 3) restarts, sem: 1
11032674: -> (aft) nb: 0, ng: 5
11058076: cv_nodes: Thread (0, 2) UNlocked mx of u=0
11073574: Thread (0, 1) locked mx of u=0
11131662: (2) thread (2, 3) gets out of cv
11242972: cv_nodes: Thread (0, 2) UNlocked mx of v=2
BACKWARD EDGE (1, 2)
11332501: Thread (0, 1) trying to lock mx of v=1
11427457: Thread (2, 3) trying to lock mx of u=2
11510423: thread (0, 2) starts spawning
11598890: Thread (1, 2) has edge flow <= 0: 0
11983577: cv_nodes: Thread (1, 2) UNlocked mx of u=1
12005010: Thread (0, 1) locked mx of v=1
12065426: cv_nodes: Thread (1, 2) UNlocked mx of v=2
FORWARD EDGE (0, 1)
12155499: thread (1, 2) starts spawning
12156060: Thread (0, 1) setting label of node 1
12179949: thread (1, 2) finished spawning; nb: 0 ng: 6
12206737: (2) thread (1, 2) will block on cv, nb: 0 ng: 6
12227004: (2) thread (1, 2) checks cv
12229013: cv_nodes: Thread (0, 1) UNlocked mx of u=0
12241904: -> (bef) nb: 0, ng: 6
12260366: -> thread (1, 2) stops, sem: 0
12284111: -> (aft) nb: 1, ng: 6
12283415: cv_nodes: Thread (0, 1) UNlocked mx of v=1
12320082: thread (0, 1) starts spawning
12342656: thread (0, 1) finished spawning; nb: 1 ng: 6
12368635: (2) thread (0, 1) will block on cv, nb: 1 ng: 6
12394054: (2) thread (0, 1) checks cv
12412276: -> (bef) nb: 1, ng: 6
12429261: -> thread (0, 1) stops, sem: 0
12446816: -> (aft) nb: 2, ng: 6
FORWARD EDGE (1, 3)
13818901: Thread (2, 3) locked mx of u=2
13948669: Thread (1, 3) has remaining capacity <= 0: 0
14089576: Thread (2, 3) trying to lock mx of v=3
14203816: cv_nodes: Thread (1, 3) UNlocked mx of u=1
14404811: Thread (2, 3) locked mx of v=3
14386807: cv_nodes: Thread (1, 3) UNlocked mx of v=3
FORWARD EDGE (2, 3)
14564627: (2) thread (1, 3) will block on cv, nb: 2 ng: 6
14615047: Thread (2, 3) setting label of node 3
14699071: (2) thread (1, 3) checks cv
14866052: -> (bef) nb: 2, ng: 6
14934344: -> thread (1, 3) stops, sem: 0
14798705: cv_nodes: Thread (2, 3) UNlocked mx of u=2
15006093: -> (aft) nb: 3, ng: 6
15088790: cv_nodes: Thread (2, 3) UNlocked mx of v=3
15233692: I am the augmenter thread (2, 3)
15247116: *. Augmenter edge: (2, 3) is waiting on cv augment
15259972: thread (2, 3), nb: 3 ng: 6
16722213: thread (0, 2) generated thread (2, 1)
16726093: (enter) I am tid: 140143112484416 with edge: (2, 1) 
16996860: (1) thread (2, 1) will block on cv, nb: 3 ng: 6
16866658: thread (0, 2) finished spawning; nb: 3 ng: 6
17092295: (1) thread (2, 1) checks cv
17235833: (2) thread (0, 2) will block on cv, nb: 3 ng: 6
17317183: -> (bef) nb: 3, ng: 6
17567464: -> thread (2, 1) stops, sem: 0
17634584: -> (aft) nb: 4, ng: 6
17767291: (2) thread (0, 2) checks cv
17834701: -> (bef) nb: 4, ng: 6
17850477: -> thread (0, 2) stops, sem: 0
17893282: -> (aft) nb: 5, ng: 6
18043667: thread (2, 3), nb: 5 ng: 6
18188314: *. Augmenter - edge: (2, 3) gets out of cv augment
18265713: augmented flow: 3
18340300: reset labels
18490228: (2) thread (1, 2) checks cv
18537219: Thread (2, 3) trying to lock mx of u=2
18554595: -> (bef) nb: 0, ng: 6
18570677: Thread (2, 3) locked mx of u=2
18631693: -> thread: (1, 2) restarts, sem: 1
18705269: Thread (2, 3) trying to lock mx of v=3
18791067: -> (aft) nb: 0, ng: 6
18897503: Thread (2, 3) locked mx of v=3
18993176: (2) thread (1, 3) checks cv
19023866: -> (bef) nb: 0, ng: 6
18979172: (2) thread (1, 2) gets out of cv
19105762: -> thread: (1, 3) restarts, sem: 1
19295202: -> (aft) nb: 0, ng: 6
19210829: Thread (1, 2) trying to lock mx of u=1
19367085: (2) thread (1, 3) gets out of cv
19384549: (2) thread (0, 1) checks cv
19440386: Thread (1, 2) locked mx of u=1
19675351: Thread (1, 2) trying to lock mx of v=2
19715429: Thread (1, 2) locked mx of v=2
19519464: Thread (1, 3) trying to lock mx of u=1
19586826: -> (bef) nb: 0, ng: 6
19892446: -> thread: (0, 1) restarts, sem: 1
20013071: -> (aft) nb: 0, ng: 6
19800263: Thread (1, 3) locked mx of u=1
20138487: (1) thread (2, 1) checks cv
20190064: -> (bef) nb: 0, ng: 6
20190285: Thread (1, 3) trying to lock mx of v=3
20237425: -> thread: (2, 1) restarts, sem: 1
20438977: -> (aft) nb: 0, ng: 6
20324152: Thread (1, 3) locked mx of v=3
20089758: (2) thread (0, 1) gets out of cv
20688744: Thread (0, 1) trying to lock mx of u=0
20781304: Thread (0, 1) locked mx of u=0
20861934: Thread (0, 1) trying to lock mx of v=1
20510126: (1)  edge: (2, 1) gets out of cv
20957821: Thread (0, 1) locked mx of v=1
21104033: Thread (2, 1) trying to lock mx of v=1
FORWARD EDGE (0, 1)
21130359: (2) thread (0, 2) checks cv
21277499: Thread (0, 1) setting label of node 1
21364201: -> (bef) nb: 0, ng: 6
21497661: -> thread: (0, 2) restarts, sem: 1
21553842: -> (aft) nb: 0, ng: 6
21608209: cv_nodes: Thread (0, 1) UNlocked mx of u=0
21612973: (2) thread (0, 2) gets out of cv
21739031: cv_nodes: Thread (0, 1) UNlocked mx of v=1
21742671: Thread (0, 2) trying to lock mx of u=0
21774219: Thread (0, 2) locked mx of u=0
21752219: Thread (2, 1) locked mx of v=1
21779387: thread (0, 1) starts spawning
21851660: Thread (0, 2) trying to lock mx of v=2
21934154: Thread (2, 1) trying to lock mx of u=2
22024380: thread (0, 1) finished spawning; nb: 0 ng: 6
22101613: Thread (0, 2) locked mx of v=2
22267032: (2) thread (0, 1) will block on cv, nb: 0 ng: 6
22455840: (2) thread (0, 1) checks cv
FORWARD EDGE (0, 2)
22614963: Thread (0, 2) has remaining capacity <= 0: 0
22704941: cv_nodes: Thread (0, 2) UNlocked mx of u=0
22596688: -> (bef) nb: 0, ng: 6
22853212: Thread (2, 1) locked mx of u=2
22815965: cv_nodes: Thread (0, 2) UNlocked mx of v=2
23027068: thread (0, 2) starts spawning
23092822: thread (0, 2) finished spawning; nb: 0 ng: 6
23155909: (2) thread (0, 2) will block on cv, nb: 0 ng: 6
BACKWARD EDGE (2, 1)
23414800: Thread (2, 1) has edge flow <= 0: 0
23475805: cv_nodes: Thread (2, 1) UNlocked mx of u=2
23589149: cv_nodes: Thread (2, 1) UNlocked mx of v=1
22882160: -> thread (0, 1) stops, sem: 0
23615167: thread (2, 1) starts spawning
23628976: thread (2, 1) finished spawning; nb: 1 ng: 6
23628373: -> (aft) nb: 1, ng: 6
FORWARD EDGE (1, 2)
23751577: (2) thread (0, 2) checks cv
23642601: signal to Waiting I am the last, T(2, 1)
23775036: Thread (1, 2) setting label of node 2
23832047: -> (bef) nb: 1, ng: 6
24132739: cv_nodes: Thread (1, 2) UNlocked mx of u=1
23978717: (return) end of thread (2, 1)
24162190: cv_nodes: Thread (1, 2) UNlocked mx of v=2
24226903: (return) end of thread (1, 3)
24375948: thread (1, 2) starts spawning
24410230: thread (1, 2) finished spawning; nb: 1 ng: 5
24162724: -> thread (0, 2) stops, sem: 0
24625019: -> (aft) nb: 2, ng: 4
24249173: (return) end of thread (2, 3)
24721934: (2) thread (0, 1) checks cv
24748990: -> (bef) nb: 2, ng: 4
24508224: (2) thread (1, 2) will block on cv, nb: 1 ng: 4
24845882: -> thread: (0, 1) restarts, sem: 1
24998704: -> (aft) nb: 2, ng: 3
25097403: (2) thread (0, 1) gets out of cv
25125172: (2) thread (1, 2) checks cv
25162548: -> (bef) nb: 2, ng: 3
25147424: i'm a thread (0, 1) and joining thread: 140143139735104
25233260: -> thread (1, 2) stops, sem: 0
25470520: -> (aft) nb: 3, ng: 3


when a thread is waiting bc has no label
create an array of nodes with bool id there is a label for that node
every time a label is added to a node, set to true the slot with index = node
create an array of nodes for which threads are blocked
every time a thread enters the waiting state, bc has no label, set that node to true

array 1 -> node 0 | node 1| node 2 | node 3| ...
array 2 -> node 0 | node 1| node 2 | node 3| ...

when a thread enters waiting, set its nodes in array 1 to true
when a label is set to a node, set that node in array 2 to true

when a thread wants to end and has to check if it is the last 1 running worker and no waiting can be unblocked:
call func that checks for each index in array 1 and array 2 if there is a node that has a label set and there is a thread waiting for that node
i.e. if arr1[i] != arr2[i] -> not last worker node, there will be some waiting that is about to unblock
     else if for every i, arr1[i]==arr2[i] -> then this worker is the last one


ievery time a thread is about to end, need to understand if that thread is the last one that is running
and all the other threads are waiting without having any waiting that could be unblocked due to a signal arriving libsanitizer

at the time of T that is about to end, do
call a func to check if there is some label that was set and there is a waiting thread for that label
if there is a waiting thread, at that time, then that thread would unblock

create an array of N elements = # nodes
when a thread has none of its nodes with a label
in the array set those nodes as true, i.e. nodes for which 1 or more thread is blocked

when a label is set, call a func to check if in the array there is a



WARNING: ThreadSanitizer: lock-order-inversion (potential deadlock) (pid=221375)
  Cycle in lock order graph: M46 (0x7fffad7094f8) => M41 (0x7b3c000001f8) => M46

  Mutex M41 acquired here while holding mutex M46 in thread T3:
    #0 pthread_mutex_lock ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:4240 (libtsan.so.0+0x53908)
    #1 __gthread_mutex_lock /usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h:749 (MaxFlowSolverP+0x5d37)
    #2 std::mutex::lock() /usr/include/c++/11/bits/std_mutex.h:100 (MaxFlowSolverP+0x601c)
    #3 Node::lockSharedMutex() /home/giosilve/Maximum-Flow-Problem/src/NodeFirst.hpp:154 (MaxFlowSolverP+0x6dae)
    #4 MaxFlowSolverParallel::thread_function(int, int, Edge*)::{lambda()#2}::operator()() const /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:452 (MaxFlowSolverP+0x88c2)
    #5 void std::condition_variable::wait<MaxFlowSolverParallel::thread_function(int, int, Edge*)::{lambda()#2}>(std::unique_lock<std::mutex>&, MaxFlowSolverParallel::thread_function(int, int, Edge*)::{lambda()#2}) /usr/include/c++/11/condition_variable:102 (MaxFlowSolverP+0xc986)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:435 (MaxFlowSolverP+0x934f)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x1583f)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x155d8)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x153bc)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x152f0)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x152a2)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

    Hint: use TSAN_OPTIONS=second_deadlock_stack=1 to get more informative warning message

  Mutex M46 acquired here while holding mutex M41 in thread T4:
    #0 pthread_cond_wait ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:1176 (libtsan.so.0+0x654e8)
    #1 void std::condition_variable::wait<MaxFlowSolverParallel::thread_function(int, int, Edge*)::{lambda()#2}>(std::unique_lock<std::mutex>&, MaxFlowSolverParallel::thread_function(int, int, Edge*)::{lambda()#2}) /usr/include/c++/11/condition_variable:103 (MaxFlowSolverP+0xc97d)
    #2 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:435 (MaxFlowSolverP+0x934f)
    #3 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x1583f)
    #4 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x155d8)
    #5 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x153bc)
    #6 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x152f0)
    #7 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x152a2)
    #8 <null> <null> (libstdc++.so.6+0xdc252)

  Thread T3 (tid=221379, running) created by thread T1 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc328)
    #2 void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/ext/new_allocator.h:162 (MaxFlowSolverP+0x108c7)
    #3 void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::allocator<std::thread>&, std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/alloc_traits.h:516 (MaxFlowSolverP+0xeab1)
    #4 void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:449 (MaxFlowSolverP+0xec4f)
    #5 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:121 (MaxFlowSolverP+0xc820)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:704 (MaxFlowSolverP+0xa078)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x1583f)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x155d8)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x153bc)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x152f0)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x152a2)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

  Thread T4 (tid=221380, running) created by thread T2 at:
    #0 pthread_create ../../../../src/libsanitizer/tsan/tsan_interceptors_posix.cpp:969 (libtsan.so.0+0x605b8)
    #1 std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) <null> (libstdc++.so.6+0xdc328)
    #2 void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/ext/new_allocator.h:162 (MaxFlowSolverP+0x108c7)
    #3 void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(std::allocator<std::thread>&, std::thread*, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/alloc_traits.h:516 (MaxFlowSolverP+0xeab1)
    #4 void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:449 (MaxFlowSolverP+0xec4f)
    #5 std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*&>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&) /usr/include/c++/11/bits/vector.tcc:121 (MaxFlowSolverP+0xc820)
    #6 MaxFlowSolverParallel::thread_function(int, int, Edge*) /home/giosilve/Maximum-Flow-Problem/src/MaxFlowSolverParallel.hpp:704 (MaxFlowSolverP+0xa078)
    #7 void std::__invoke_impl<void, void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(std::__invoke_memfun_deref, void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:74 (MaxFlowSolverP+0x1583f)
    #8 std::__invoke_result<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>::type std::__invoke<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*>(void (MaxFlowSolverParallel::*&&)(int, int, Edge*), MaxFlowSolverParallel*&&, int&&, int&&, Edge*&&) /usr/include/c++/11/bits/invoke.h:96 (MaxFlowSolverP+0x155d8)
    #9 void std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::_M_invoke<0ul, 1ul, 2ul, 3ul, 4ul>(std::_Index_tuple<0ul, 1ul, 2ul, 3ul, 4ul>) /usr/include/c++/11/bits/std_thread.h:259 (MaxFlowSolverP+0x153bc)
    #10 std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> >::operator()() /usr/include/c++/11/bits/std_thread.h:266 (MaxFlowSolverP+0x152f0)
    #11 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MaxFlowSolverParallel::*)(int, int, Edge*), MaxFlowSolverParallel*, int, int, Edge*> > >::_M_run() /usr/include/c++/11/bits/std_thread.h:211 (MaxFlowSolverP+0x152a2)
    #12 <null> <null> (libstdc++.so.6+0xdc252)

SUMMARY: ThreadSanitizer: lock-order-inversion (potential deadlock) /usr/include/x86_64-linux-gnu/c++/11/bits/gthr-default.h:749 in __gthread_mutex_lock
